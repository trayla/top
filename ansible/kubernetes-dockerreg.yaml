- hosts: controlplane1
  become: yes
  vars_files:
  - /opt/mgmt/values-top.yaml
  tasks:

  # Deploy the Docker Registry

  - name: Deploy the Application
    shell: |
      cat <<EOF | kubectl create -f -
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        namespace: top
        name: dockerreg
      spec:
        selector:
          matchLabels:
            app: dockerreg
            env: p
        replicas: 1
        template:
          metadata:
            labels:
              app: dockerreg
              env: p
          spec:
            containers:
            - name: registry
              image: registry
              volumeMounts:
                - name: data
                  mountPath: /var/lib/registry
              ports:
              - name: http
                containerPort: 5000
            volumes:
            - name: data
              persistentVolumeClaim:
                  claimName: dockerreg
      EOF

  - name: Deploy the physical volume claim
    shell: |
      cat <<EOF | kubectl create -f -
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        namespace: top
        name: dockerreg
      spec:
        resources:
          requests:
            storage: 30Gi
        accessModes:
          - ReadWriteMany
        storageClassName: default
      EOF

  - name: Deploy the service
    shell: |
      cat <<EOF | kubectl create -f -
      apiVersion: v1
      kind: Service
      metadata:
        namespace: top
        name: dockerreg
        labels:
          app: dockerreg
          env: p
      spec:
        type: ClusterIP
        ports:
        - name: http
          port: 5000
        selector:
          app: dockerreg
          env: p
      EOF

  - name: Deploy the Ingress
    shell: |
      cat <<EOF | kubectl create -f -
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        namespace: top
        name: dockerreg
        annotations:
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: 2000m
          nginx.ingress.kubernetes.io/auth-type: basic
          nginx.ingress.kubernetes.io/auth-secret: basic-auth
          nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
      spec:
        tls:
        - hosts:
          - dockerreg.{{ platform.name }}.{{ platform.domain }}
          secretName: dockerreg-tls
        rules:
        - host: dockerreg.{{ platform.name }}.{{ platform.domain }}
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: dockerreg
                  port:
                    number: 5000
      EOF

  - name: Create the Docker Registry pull secret inside the top namespace
    shell: "kubectl create -n top secret docker-registry dockerreg-pull --docker-server=dockerreg.{{ platform.name }}.{{ platform.domain }} --docker-username=admin --docker-password={{ platform.admin.password }} --docker-email={{ platform.email }}"
