- hosts: controlplane1
  become: yes
  gather_facts: false
  vars_files:
  - /opt/mgmt/values-top.yaml
  tasks:

  - name: Get join command
    shell: kubeadm token create --print-join-command
    register: join_command_raw

  - name: Set join command
    set_fact:
      join_command: "{{ join_command_raw.stdout_lines[0] }}"

# Install Longhorn requirements on each data node
- hosts: kubernetes
  become: yes
  vars_files:
  - /opt/mgmt/values-top.yaml
  tasks:

  - name: Create the longhorn data directory
    file:
      path: /var/lib/longhorn
      state: directory
    when: allhosts == 'true' or inventory_hostname == host

  - name: Install iSCSI packages for Longhorn
    apt:
      name: open-iscsi
      state: present
    when: allhosts == 'true' or inventory_hostname == host

  - name: Install NFS tools for Longhorn
    apt:
      name: nfs-common
      state: present
    when: allhosts == 'true' or inventory_hostname == host

- hosts: workers
  become: yes
  vars_files:
  - /opt/mgmt/values-top.yaml
  tasks:

  - name: Join the nodes to the cluster
    shell: "{{ hostvars['controlplane1'].join_command }} >> node_joined.txt"
    args:
      chdir: $HOME
      creates: node_joined.txt
    when: allhosts == 'true' or inventory_hostname == host

  - name: Add IP address of all control plane nodes to each Kubernetes node
    lineinfile:
      dest: /etc/hosts
      regexp: '.*{{ item }}$'
      line: "{{ item.ip }} {{ item.hostname }}"
      state: present
    loop: "{{ platform.nodes.controlplanes.values() | list }}"

  - name: Add IP address of all worker nodes to each Kubernetes node
    lineinfile:
      dest: /etc/hosts
      regexp: '.*{{ item }}$'
      line: "{{ item.ip }} {{ item.hostname }}"
      state: present
    loop: "{{ platform.nodes.workers.values() | list }}"
