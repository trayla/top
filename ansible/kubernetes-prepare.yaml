- hosts: kubernetes
  become: yes
  vars_files:
  - /opt/mgmt/values-top.yaml
  tasks:

  - name: Set the hostname of all Kubernetes nodes
    ansible.builtin.hostname:
      name: "{{ hostvars[inventory_hostname].ansible_fqcn }}"

  # Enable IP forwarding

  - name: Enable IP forwarding
    ansible.posix.sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      sysctl_set: yes
      state: present
      reload: yes

  # Ensure the existance of the netfilter bridging module

  - name: Ensure the existance of the netfilter bridging module
    shell: modprobe br_netfilter

  # Prepare all Kubernetes nodes for installation

  - name: Install GPG
    apt:
      name: gnupg
      state: present

  - name: Install APT Transport HTTPS
    apt:
      name: apt-transport-https
      state: present

  - name: Add Kubernetes apt-key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add Kubernetes APT repository
    apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: 'kubernetes'

  # Install Kubernetes

  - name: Install kubelet
    apt:
      name: kubelet={{ platform.assets.kubernetes.version }}
      state: present
      update_cache: true

  - name: Install kubeadm
    apt:
      name: kubeadm={{ platform.assets.kubernetes.version }}
      state: present

  - name: Give kubelet some time to start and initialize
    ansible.builtin.wait_for:
      timeout: 120

- hosts: controlpanes
  become: yes
  vars_files:
  - /opt/mgmt/values-top.yaml
  tasks:

  - name: Let Kubernetes listen to the configured IP address on all control planes nodes
    shell: |
      sed -i 's/KUBELET_CONFIG_ARGS=/KUBELET_CONFIG_ARGS=--node-ip={{ platform.nodes.controlplanes[inventory_hostname].ip }} /' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      systemctl daemon-reload
      systemctl restart kubelet

- hosts: workers
  become: yes
  vars_files:
  - /opt/mgmt/values-top.yaml
  tasks:

  - name: Let Kubernetes listen to the configured IP address on all worker nodes
    shell: |
      sed -i 's/KUBELET_CONFIG_ARGS=/KUBELET_CONFIG_ARGS=--node-ip={{ platform.nodes.workers[inventory_hostname].ip }} /' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      systemctl daemon-reload
      systemctl restart kubelet

  - name: Give kubelet some time to start and initialize
    ansible.builtin.wait_for:
      timeout: 120
