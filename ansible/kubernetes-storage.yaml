- hosts: console
  become: yes
  vars_files:
  - /opt/mgmt/values-top.yaml
  tasks:

  - name: Create the longhorn namespace along with the UI password
    shell: |
      kubectl create ns longhorn-system
      htpasswd -b -c /tmp/auth admin {{ platform.admin.password }}
      kubectl -n longhorn-system create secret generic basic-auth --from-file=/tmp/auth
      rm /tmp/auth
    ignore_errors: yes

  - name: Install Longhorn
    shell: |
      helm repo add longhorn https://charts.longhorn.io
      helm repo update
      helm install longhorn longhorn/longhorn --namespace longhorn-system \
        --version v{{ platform.assets.longhorn.version }} \
        --set defaultSettings.backupTarget=s3://{{ platform.storage.backup.s3.bucket }}@{{ platform.storage.backup.s3.region }}/ \
        --set defaultSettings.backupTargetCredentialSecret=longhorn-backuptarget

  - name: Create an Ingress for the Longhorn UI
    shell: |
      cat <<EOF | kubectl create -f -
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        namespace: longhorn-system
        name: longhorn
        annotations:  
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/auth-type: basic
          nginx.ingress.kubernetes.io/auth-secret: basic-auth
          nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
      spec:
        tls:
        - hosts:
          - longhorn.{{ platform.name }}.{{ platform.domain }}
          secretName: longhorn-tls
        rules:
        - host: longhorn.{{ platform.name }}.{{ platform.domain }}
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: longhorn-frontend
                  port:
                    number: 80
      EOF

  - name: Create the default storage class
    shell: |
      cat <<EOF | kubectl create -f -
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: default
      provisioner: driver.longhorn.io
      allowVolumeExpansion: true
      parameters:
        numberOfReplicas: "1"
        dataLocality: "best-effort"
        staleReplicaTimeout: "2880"
        fromBackup: ""
      EOF

  - name: Switch the default storage class
    shell: |
      kubectl patch storageclass longhorn -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
      kubectl patch storageclass default -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'

  - name: Create the backup access secret
    shell: |
      cat <<EOF | kubectl create -f -
      apiVersion: v1
      kind: Secret
      metadata:
        name: longhorn-backuptarget
        namespace: longhorn-system
      type: Opaque
      data:
        AWS_ACCESS_KEY_ID: {{ platform.storage.backup.s3.access_key_id | string | b64encode }}
        AWS_SECRET_ACCESS_KEY: {{ platform.storage.backup.s3.secret_access_key | string | b64encode }}
        AWS_ENDPOINTS: {{ platform.storage.backup.s3.endpoints | string | b64encode }}
      EOF
